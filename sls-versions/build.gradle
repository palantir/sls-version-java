apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.revapi'
apply plugin: 'me.champeau.jmh'

dependencies {
    api 'com.fasterxml.jackson.core:jackson-annotations'
    api 'com.palantir.safe-logging:preconditions'
    api 'com.palantir.safe-logging:safe-logging'
    implementation 'com.palantir.safe-logging:logger'

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.google.guava:guava'
    testImplementation 'net.jqwik:jqwik-api'
    testRuntimeOnly 'net.jqwik:jqwik'

    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess'
    jmh 'org.openjdk.jmh:jmh-core'
    jmh project(':sls-versions')
    jmh 'org.apache.logging.log4j:log4j-slf4j-impl'
}

tasks.withType(Test) {
    useJUnitPlatform {
        includeEngines 'jqwik', 'junit-jupiter'
    }
}

jmh {
    // Use profilers to collect additional data. Supported profilers:
    // [cl, comp, gc, stack, perf, perfnorm, perfasm, xperf, xperfasm, hs_cl, hs_comp, hs_gc, hs_rt, hs_thr]
    profilers = ['gc']
}

tasks.jmhCompileGeneratedClasses {
    options.annotationProcessorPath = configurations.errorprone
    options.errorprone.enabled = false
}
