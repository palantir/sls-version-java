buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url  "http://palantir.bintray.com/releases" }
    }
    dependencies {
        classpath 'com.netflix.nebula:nebula-dependency-recommender:5.2.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:5.1.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.1'
        classpath 'com.palantir.baseline:gradle-baseline-java:0.22.1'
        classpath 'com.palantir.configurationresolver:gradle-configuration-resolver-plugin:0.3.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.11.0'
        classpath 'gradle.plugin.com.palantir:gradle-circle-style:1.1.2'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.7'
    }
}

plugins {
    id 'org.inferred.processors' version '1.2.12'
}

apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.baseline-config'
apply plugin: 'com.palantir.baseline-idea'
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.circle.style'

allprojects {
    apply plugin: 'com.palantir.configuration-resolver'
    apply plugin: 'nebula.dependency-recommender'

    version gitVersion()
    group 'com.palantir.sls.versions'

    repositories {
        jcenter()
        maven { url "http://palantir.bintray.com/releases" }
    }

    dependencyRecommendations {
        strategy OverrideTransitives
        propertiesFile file: project.rootProject.file('versions.props')
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
        }
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'com.palantir.baseline-checkstyle'
    apply plugin: 'com.palantir.baseline-eclipse'
    apply plugin: 'com.palantir.baseline-idea'
    apply plugin: 'com.palantir.baseline-class-uniqueness'
    apply plugin: 'org.inferred.processors'
    apply plugin: 'com.palantir.baseline-error-prone' // Must come after processors
    apply from: "${rootDir}/gradle/publish-jar.gradle"


    tasks.withType(JavaCompile) {
        options.compilerArgs += [ '-XepDisableWarningsInGeneratedCode' ]
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
        afterEvaluate {
            classDirectories = project.files(classDirectories.files.collect {
                // Exclusion path is project-relative and has a base of compiled classes
                fileTree(dir: it, exclude: '**/Immutable*.class')
            })
        }
    }

    tasks.jacocoTestReport.dependsOn(tasks.test)
    tasks.check.dependsOn(tasks.jacocoTestReport)
    tasks.check.dependsOn(javadoc)

    sourceCompatibility = 1.8

    configurations.errorprone {
        resolutionStrategy {
            force 'com.google.guava:guava:21.0'
        }
    }
}

dependencies {
    baseline 'com.palantir.baseline:gradle-baseline-java-config:0.22.1@zip'
}

