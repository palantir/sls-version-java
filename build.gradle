buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }

    dependencies {
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.11.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:4.73.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.8.0'
        classpath 'com.palantir.gradle.revapi:gradle-revapi:1.6.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.17.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.6.0'
        classpath 'me.champeau.jmh:jmh-gradle-plugin:0.6.5'
    }
}

plugins {
    id 'com.palantir.git-version' version '0.13.0'
    id 'org.inferred.processors' version '3.6.0'
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline-java-versions'

version gitVersion()

allprojects {
    apply plugin: 'com.palantir.java-format'
    group 'com.palantir.sls.versions'
    version rootProject.version

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.inferred.processors'

    tasks.check.dependsOn(javadoc)

    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Werror']
    }

    plugins.withId('com.palantir.baseline-error-prone', {
        dependencies {
            compileOnly 'com.google.code.findbugs:jsr305'
            annotationProcessor 'com.uber.nullaway:nullaway'
        }

        tasks.withType(JavaCompile) {
            options.errorprone.errorproneArgs.add '-XepOpt:NullAway:AnnotatedPackages=com.palantir'
        }
    })
}

javaVersions {
    libraryTarget = 11
    runtime = 17
}

